<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml">

    <ui:define name="head">
        <style type="text/css">
            .ui-datalist ul {
                padding: 0px 10px 0 20px;
                margin: 5px 0;
            }

            .ui-datalist {
                margin-bottom: 10px
            }

            .ui-noborder tr.ui-widget-content {
                background: none;
            }
        </style>
    </ui:define>

    <ui:define name="title">
        SelectManyCheckbox
    </ui:define>

    <ui:define name="description">
        SelectManyCheckbox is used to choose multiple items from a collection.
    </ui:define>

    <ui:param name="documentationLink" value="/components/selectmanycheckbox"/>

    <ui:define name="implementation">
        <div class="card">
            <h:form>
                <h5 style="margin-top:0px">Basic Layout</h5>
                <p:selectManyCheckbox id="basic" value="#{checkboxView.selectedOptions}">
                    <f:selectItem itemLabel="Option 1" itemValue="Option 1"/>
                    <f:selectItem itemLabel="Option 2" itemValue="Option 2"/>
                    <f:selectItem itemLabel="Option 3" itemValue="Option 3"/>
                </p:selectManyCheckbox>

                <h5>Grid Layout</h5>
                <p:selectManyCheckbox id="grid" value="#{checkboxView.selectedCities}" layout="grid" columns="3">
                    <f:selectItems value="#{checkboxView.cities}" var="city" itemLabel="#{city}" itemValue="#{city}"/>
                </p:selectManyCheckbox>

                <h5>Responsive</h5>
                <p:selectManyCheckbox id="grid2" value="#{checkboxView.selectedCities2}" layout="responsive"
                                      columns="3">
                    <f:selectItems value="#{checkboxView.cities}" var="city" itemLabel="#{city}" itemValue="#{city}"/>
                </p:selectManyCheckbox>

                <h5>Custom Layout</h5>
                <p:outputPanel id="customPanel" style="margin-bottom:20px">
                    <p:selectManyCheckbox id="custom" value="#{checkboxView.selectedOptions2}" layout="custom">
                        <f:selectItem itemLabel="Option 1" itemValue="Option 1"/>
                        <f:selectItem itemLabel="Option 2" itemValue="Option 2"/>
                        <f:selectItem itemLabel="Option 3" itemValue="Option 3"/>
                    </p:selectManyCheckbox>

                    <div class="ui-grid ui-grid-responsive">
                        <div class="ui-grid-row">
                            <div class="ui-grid-col-4" style="text-align:center">
                                <h:outputLabel for="opt1" value="Option 1" style="display:block;margin-bottom: 8px"/>
                                <p:checkbox id="opt1" for="custom" itemIndex="0"/>
                            </div>
                            <div class="ui-grid-col-4" style="text-align:center">
                                <h:outputLabel for="opt2" value="Option 2" style="display:block;margin-bottom: 8px"/>
                                <p:checkbox id="opt2" for="custom" itemIndex="1"/>
                            </div>
                            <div class="ui-grid-col-4" style="text-align:center">
                                <h:outputLabel for="opt3" value="Option 3" style="display:block;margin-bottom: 8px"/>
                                <p:checkbox id="opt3" for="custom" itemIndex="2"/>
                            </div>
                        </div>
                    </div>
                </p:outputPanel>

                <h5>Grouped</h5>
                <p:selectManyCheckbox id="grid3" value="#{checkboxView.selectedCountries}" layout="pageDirection"
                                      columns="1">
                    <f:selectItems value="#{checkboxView.countries}" var="country" itemLabel="#{country}"
                                   itemValue="#{country}"/>
                </p:selectManyCheckbox>

                <p:separator/>

                <p:commandButton value="Submit" update="display" oncomplete="PF('dlg').show()" icon="pi pi-check"/>

                <p:dialog header="Values" modal="true" showEffect="clip" widgetVar="dlg" resizable="false">
                    <p:outputPanel id="display">
                        <p:dataList value="#{checkboxView.selectedOptions}" var="option">
                            <f:facet name="header">
                                Basic
                            </f:facet>
                            #{option}
                        </p:dataList>
                        <p:dataList value="#{checkboxView.selectedCities}" var="city">
                            <f:facet name="header">
                                Grid
                            </f:facet>
                            #{city}
                        </p:dataList>
                        <p:dataList value="#{checkboxView.selectedCities2}" var="city">
                            <f:facet name="header">
                                Grid
                            </f:facet>
                            #{city}
                        </p:dataList>
                        <p:dataList value="#{checkboxView.selectedOptions2}" var="option">
                            <f:facet name="header">
                                Custom
                            </f:facet>
                            #{option}
                        </p:dataList>
                        <p:dataList value="#{checkboxView.selectedCountries}" var="country">
                            <f:facet name="header">
                                Countries
                            </f:facet>
                            #{country}
                        </p:dataList>
                    </p:outputPanel>
                </p:dialog>
            </h:form>
        </div>
    </ui:define>

</ui:composition>